<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
    xmlns:cache="http://www.springframework.org/schema/cache"  
    xsi:schemaLocation="  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context.xsd  
    http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx.xsd  
    http://www.springframework.org/schema/jdbc  
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd  
    http://www.springframework.org/schema/cache  
    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd  
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop.xsd  
    http://www.springframework.org/schema/util  
    http://www.springframework.org/schema/util/spring-util.xsd">

    <context:annotation-config/>
    <!-- 加载db.properties 中的内容 -->
   <!-- <context:property-placeholder location="classpath:db.properties" />-->
    
    <!--<context:component-scan base-package="mapper"></context:component-scan>-->
    
    
 <!-- 配置数据源  dbcp-->
 <!-- 
  数据库连接池的解决方案是在应用程序启动时建立足够的数据库连接，并讲这些连接组成一个连接池(简单说：
  在一个“池”里放了好多半成品的数据库联接对象)，由应用程序动态地对池中的连接进行申请、使用和释放。
  对于多于连接池中连接数的并发请求，应该在请求队列中排队等待。
  并且应用程序可以根据池中连接的使用率，动态增加或减少池中的连接数
  -->
<!-- <bean id="dataSource"  class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="${jdbc.driver}" />  
    <property name="url" value="${jdbc.url}" />  
    <property name="username" value="${jdbc.username}" />     
    <property name="password" value="${jdbc.password}" />  
    &lt;!&ndash; 连接池的最大使用连接数 &ndash;&gt;
    <property name="maxActive" value="30" /> 
    &lt;!&ndash; 连接池的最小空闲 &ndash;&gt;
    <property name="maxIdle" value="5" />   
</bean> -->
<!-- sqlSessionFactory -->
<!--配置sqlSessionFactory-->  
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">   -->
        <!--&lt;!&ndash; 数据库连接池 &ndash;&gt;-->
        <!--<property name="dataSource" ref="dataSource" /> -->
        <!--&lt;!&ndash; 加载mybatis的全局配置文件 &ndash;&gt;  -->
        <!--<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml"/>  -->
        <!--&lt;!&ndash;  <property name="mapperLocations" value="mapper/*.xml"/> &ndash;&gt;-->
    <!--</bean> -->
    <!---->
     <!--&lt;!&ndash; mapper扫描器 &ndash;&gt;-->
     <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
         <!--&lt;!&ndash; 如果需要扫描多个，中间使用半角的逗号 &ndash;&gt;-->
         <!--<property name="basePackage" value="mapper"></property>-->
          <!--&lt;!&ndash; 要用 sqlSessionFactoryBeanName &ndash;&gt;-->
         <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />-->
     <!--</bean>-->
    <!---->
     <!-- 
        事务管理器，对mybatis 操作数据库事务控制，
        spring 使用jdbc的事务控制类。
      -->
      <!-- 必须加上这句话 -->
<!--      <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
      <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
          <property name="dataSource" ref="dataSource" />
      </bean> -->
</beans>    